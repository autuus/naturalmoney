// out of date

$recursion->mysql_username
$recursion->mysql_password
$recursion->mysql_host
$recursion->mysql_database
$recursion->tax_perent

$recursion->database->query($query)
$recursion->database->$table->select($what)
$recursion->database->$table->select_all($what)
$recursion->database->$table->update($how, $what)
$recursion->database->$table->insert($array)
$recursion->database->$table->log()


$recursion->personal->register($array)
.$recursion->personal->validate($person)
$recursion->personal->login($username, $password)
$recursion->personal->logged_in()
.$recursion->personal->list()

$recursion->personal->details->name
$recursion->personal->details->address
$recursion->personal->details->country
$recursion->personal->details->phone
$recursion->personal->details->birthdate
$recursion->personal->details->social_security_number
$recursion->personal->details->password
$recursion->personal->details->email
$recursion->personal->details->active

$recursion->personal->account->details->id
$recursion->personal->account->details->balance
$recursion->personal->account->details->username
$recursion->personal->account->details->password
$recursion->personal->account->details->last_refresh
$recursion->personal->account->details->login_ip

$recursion->personal->account->note->create($money)
$recursion->personal->account->note->generate_barcode()
$recursion->personal->account->note->redeem($barcode)
--$recursion->personal->account->lend($how_much, $person)
--$recursion->personal->account->accept_lend($lend_id)
$recursion->personal->account->total_balance()
$recursion->personal->account->pay($money, $to, $note)
$recursion->personal->account->widraw_money($money)
$recursion->personal->account->deposit_money($money)

$recursion->publical->exeute_taxation()
$recursion->publical->money->overall_money()
$recursion->publical->money->createmoney($how_much, $to_whom, $comment)
$recursion->publical->money->exchange
$recursion->publical->money->exchange($euros, $to_whom)
$recursion->publical->show_availible_lendings()

CREATE TABLE  `rahauudistus`.`person` (
`id` INT NOT NULL AUTO_INCREMENT ,
`creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ,
`name` TEXT NOT NULL ,
`address` TEXT NOT NULL ,
`country` TEXT NOT NULL ,
`phone` TEXT NOT NULL ,
`birthdate` DATE NOT NULL ,
`social_security_number` TEXT NOT NULL ,
`email` TEXT NOT NULL ,
PRIMARY KEY (  `id` )
) ENGINE = MYISAM;


CREATE TABLE  `rahauudistus`.`account` (
`id` INT NOT NULL AUTO_INCREMENT ,
`balance` DOUBLE NOT NULL DEFAULT  '0',
`owner` INT NOT NULL ,
`login_ip` TEXT NOT NULL ,
`last_refresh` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ,
`username` TEXT NOT NULL ,
`password` TEXT NOT NULL ,
`active` BOOL DEFAULT NULL ,
UNIQUE (`id`)
) ENGINE = MYISAM;

CREATE TABLE  `rahauudistus`.`log` (
`id` INT NOT NULL AUTO_INCREMENT ,
`login` INT ,
`sql_change` TEXT ,
`function` TEXT ,
`creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ,
PRIMARY KEY (  `id` )
) ENGINE = MYISAM ;


CREATE TABLE  `rahauudistus`.`note` (
`id` INT NOT NULL AUTO_INCREMENT ,
`account` INT NOT NULL ,
`barcode` INT(12) NOT NULL ,
`money` DOUBLE ,
`creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ,
PRIMARY KEY (  `id` )
) ENGINE = MYISAM ;

CREATE TABLE  `rahauudistus`.`accountlog` (
`id` INT NOT NULL AUTO_INCREMENT ,
`account` INT ,
`money` DOUBLE ,
`comment` TEXT ,
`creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (  `id` )
) ENGINE = MYISAM;

INSERT INTO `person` (id, name, address, country, birthdate, social_security_number, email) VALUES (1, 'Hallitus', '', 'Suomi', '2010-03-01', 'NONE', 'rahauudistus@gmail.com')
INSERT INTO account (id, owner, balance, username, password, active) VALUES (1, 1, 200, 'Hallitus',  '0f4659dca17b209a4f898a1b9edaba91', 1)
